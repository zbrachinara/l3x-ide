name: Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  binary: l3x-ide

jobs:

  # Build for wasm
  release-wasm:
    runs-on: ubuntu-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version

      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Build
        run: |
          cargo build --target wasm32-unknown-unknown --profile wasm-release

      - name: Prepare package
        run: |
          mv ./target/wasm32-unknown-unknown/wasm-release/l3x-ide.wasm ./www

      - name: Package as a zip
        working-directory: ./www
        run: |
          zip --recurse-paths ../${{ env.binary }}.zip .

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.binary }}.zip
          name: wasm

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.binary }}.zip
          asset_name: ${{ env.binary }}-wasm-${{ steps.get_version.outputs.tag }}.zip
          tag: ${{ github.ref }}
          overwrite: true 

      - name: Upload package as pages artifact
        uses: actions/upload-pages-artifact@v1.0.4
        with:
          path: "./www"
          retention-days: "30"

  # push compiled wasm to github pages
  deploy-github-pages:
    needs: release-wasm

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${steps.deployment.outputs.page_url}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/deploy-pages@v1
          

  # Build for Linux
  release-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version

      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - name: install dependencies
        run: |
          sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libgtk-3-dev

      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: target/x86_64-unknown-linux-gnu/release/${{ env.binary }}
          name: linux

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-unknown-linux-gnu/release/${{ env.binary }}
          asset_name: ${{ env.binary }}-linux-${{ steps.get_version.outputs.tag }}
          tag: ${{ github.ref }}
          overwrite: true

  # Build for Windows
  release-windows:
    runs-on: windows-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version

      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true

      - name: Build
        run: |
          cargo build --release --target x86_64-pc-windows-msvc

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: target/x86_64-pc-windows-msvc/release/${{ env.binary }}.exe
          name: windows

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-pc-windows-msvc/release/${{ env.binary }}.exe
          asset_name: ${{ env.binary }}-windows-${{ steps.get_version.outputs.tag }}.exe
          tag: ${{ github.ref }}
          overwrite: true

  # Build for macOS
  release-macos:
    runs-on: macOS-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - name: Environment Setup
        run: |
          export CFLAGS="-fno-stack-check"
          export MACOSX_DEPLOYMENT_TARGET="10.9"

      - name: Build
        run: |
          cargo build --release --target x86_64-apple-darwin

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: target/x86_64-apple-darwin/release/${{ env.binary }}
          name: mac

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-apple-darwin/release/${{ env.binary }}
          asset_name: ${{ env.binary }}-macos-${{ steps.get_version.outputs.tag }}
          tag: ${{ github.ref }}
          overwrite: true